### Generated by Winemaker 0.8.4
###
### Invocation command line was
### /bin/winemaker --nosource-fix --dll --nodlls --nomfc --wine32 -I../ANT_LIB/inc -I../ANT_LIB/common -I../ANT_LIB/libraries -I../ANT_LIB/software/ANTFS -I../ANT_LIB/software/system -I../ANT_LIB/software/serial/device_management -I../ANT_LIB/software/serial -I../ANT_LIB/software/USB -I../ANT_LIB/software/USB/devices -I../ANT_LIB/software/USB/device_handles -I../ANT_LIB/software/USB/iokit_driver -L../ANT_LIB/gccDebug/-linux-gnu -lusb-1.0 .


SRCDIR                = .
SUBDIRS               =
DLLS                  = ant_dll.dll
LIBS                  =
EXES                  =



### Common settings

CEXTRA                = -mno-cygwin \
			-m32
CXXEXTRA              = -m32
RCEXTRA               =
DEFINES               =
INCLUDE_PATH          = -I../ANT_LIB/inc \
			-I../ANT_LIB/common \
			-I../ANT_LIB/libraries \
			-I../ANT_LIB/software/ANTFS \
			-I../ANT_LIB/software/system \
			-I../ANT_LIB/software/serial/device_management \
			-I../ANT_LIB/software/serial \
			-I../ANT_LIB/software/USB \
			-I../ANT_LIB/software/USB/devices \
			-I../ANT_LIB/software/USB/device_handles \
			-I../ANT_LIB/software/USB/iokit_driver \
			-I.
DLL_PATH              =
DLL_IMPORTS           =
LIBRARY_PATH          = -L../ANT_LIB/gccDebug/-linux-gnu
LIBRARIES             = -lusb-1.0


### ant_dll.dll sources and settings

ant_dll_dll_MODULE    = ant_dll.dll
ant_dll_dll_C_SRCS    =
ant_dll_dll_CXX_SRCS  = ant.cpp
ant_dll_dll_RC_SRCS   =
ant_dll_dll_LDFLAGS   = -shared \
			$(ant_dll_dll_MODULE:.dll=.spec) \
			-mno-cygwin \
			-m32
ant_dll_dll_ARFLAGS   =
ant_dll_dll_DLL_PATH  =
ant_dll_dll_DLLS      =
ant_dll_dll_LIBRARY_PATH=
ant_dll_dll_LIBRARIES =

ant_dll_dll_OBJS      = $(ant_dll_dll_C_SRCS:.c=.o) \
			$(ant_dll_dll_CXX_SRCS:.cpp=.o) \
			$(ant_dll_dll_RC_SRCS:.rc=.res)



### Global source lists

C_SRCS                = $(ant_dll_dll_C_SRCS)
CXX_SRCS              = $(ant_dll_dll_CXX_SRCS)
RC_SRCS               = $(ant_dll_dll_RC_SRCS)


### Tools

CC = winegcc
CXX = wineg++
RC = wrc
AR = ar


### Generic targets

all: $(SUBDIRS) $(DLLS:%=%.so) $(LIBS) $(EXES)

### Build rules

.PHONY: all clean dummy

$(SUBDIRS): dummy
	@cd $@ && $(MAKE)

# Implicit rules

.SUFFIXES: .cpp .cxx .rc .res
DEFINCL = $(INCLUDE_PATH) $(DEFINES) $(OPTIONS)

.c.o:
	$(CC) -c $(CFLAGS) $(CEXTRA) $(DEFINCL) -o $@ $<

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(CXXEXTRA) $(DEFINCL) -o $@ $<

.rc.res:
	$(RC) $(RCFLAGS) $(RCEXTRA) $(DEFINCL) -fo$@ $<

# Rules for cleaning

CLEAN_FILES     = y.tab.c y.tab.h lex.yy.c core *.orig *.rej \
                  \\\#*\\\# *~ *% .\\\#*

clean:: $(SUBDIRS:%=%/__clean__) $(EXTRASUBDIRS:%=%/__clean__)
	$(RM) $(CLEAN_FILES) $(RC_SRCS:.rc=.res) $(C_SRCS:.c=.o) $(CXX_SRCS:.cpp=.o)
	$(RM) $(DLLS:%=%.so) $(LIBS) $(EXES) $(EXES:%=%.so)

$(SUBDIRS:%=%/__clean__): dummy
	cd `dirname $@` && $(MAKE) clean

$(EXTRASUBDIRS:%=%/__clean__): dummy
	-cd `dirname $@` && $(RM) $(CLEAN_FILES)

### Target specific build rules
DEFLIB = $(LIBRARY_PATH) $(LIBRARIES) $(DLL_PATH) $(DLL_IMPORTS:%=-l%)

$(ant_dll_dll_MODULE).so: $(ant_dll_dll_OBJS) $(ant_dll_dll_MODULE:.dll=.spec)
	$(CXX) $(ant_dll_dll_LDFLAGS) -o $@ $(ant_dll_dll_OBJS) $(ant_dll_dll_LIBRARY_PATH) $(ant_dll_dll_DLL_PATH) $(DEFLIB) $(ant_dll_dll_DLLS:%=-l%) $(ant_dll_dll_LIBRARIES:%=-l%)


